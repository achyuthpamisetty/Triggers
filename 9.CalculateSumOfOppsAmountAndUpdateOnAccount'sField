trigger sumOfOppAmout on Opportunity(after insert,after update,after delete,after undelete){

    Set<Id> accIds = new Set<Ids>();

    if(trigger.isAfter && (trigger.isInsert || trigger.isUndelete)){

        if(!trigger.new.isEmpty()){

            for(Opportunity opp:trigger.new){

                if(opp.AccountId!=null){

                    accIds.add(opp.AccountId);

                }
            }
        }
    }

    if(Trigger.isAfter && trigger.isUpdate){

        if(!trigger.new.isEmpty()){

            for(Opportunity opp: trigger.new){

                if(opp.AccountId!= trigger.oldMap.get(opp.id).AccountId){  //compare the both old & new Id's

                    accIds.add(opp.AccountId);
                    accIds.add(trigger.oldMap.get(opp.id).AccountId);
                }

                else{

                    accIds.add(opp.AccountId);    //whenever update the Amount field without changing the account this will get updated
                }

            }
        }
    }
    
    //After deletion of the record new version of the record doesn't exist so we use trigger.old here

    if(trigger.isAfter && trigger.isDelete){

        if(!trigger.old.isEmpty()){

            for(Opportunity opp : trigger.old){

                accIds.add(opp.AccountId);
            }
        }
    }


    //Main Part of the trigger

    if(!accIds.isEmpty()){

        List<AggregateResult> aggrList = [select AccountId ids, sum(Amount) totalSum from Opportunity where AccountId IN:accIds group by AccountId];

        Map<Id,Account> mapAcc = new Map<Id,Account>();

        if(!aggrList.isEmpty()){

            for(AggregateResult aggr:aggrList){

                Account acc = new Account();

                acc.Id = (Id).get('ids');   //(DataType).get('VariableName')
                acc.TotalAmount = (Decimal).get('totalSum');
                mapAcc.put(acc.Id,acc);
            }
        }
        //whst if there is no opportunity to the Account
        else{

            for(Id accId: accIds){
                Account acc = new Account();
                acc.Id = accId;
                acc.TotalAmount = 0;
                accMap.put(acc.Id,acc);
            }
        }

        if(!mapAcc.isEmpty()){
            update mapAcc.values();
        }
    }
}
